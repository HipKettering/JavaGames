package main;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;

import javax.swing.JPanel;



public class GamePanel extends JPanel  implements Runnable{
	
	//SCREEN SETTINGS
	final int originalTileSize = 16; // 16x16
	final int scale = 3; 
	
	final int tileSize = originalTileSize * scale; // 48x48 tile 
	final int maxScreenCol = 16;
	final int maxScreenRow = 12;  //makes ratio 4:3
	final int screenWidth = tileSize * maxScreenCol; // 768 pixels
	final int screenHeight = tileSize * maxScreenRow; // 576 pixels
	
	
	KeyHandler keyH = new KeyHandler();
	Thread gameThread; // thread can be start/stopped. needs implements Runnable added to class to use thread

	// set players default position
	int playerX = 100;
	int playerY = 100;
	int playerSpeed = 4;
	
	
	
	public GamePanel() {
		
		this.setPreferredSize(new Dimension(screenWidth, screenHeight));
		this.setBackground(Color.red);
		this.setDoubleBuffered(true);
		this.addKeyListener(keyH);
		this.setFocusable(true);
	}
	
	public void startGameThread() {
		
		gameThread = new Thread(this);
		gameThread.start();
		
	}


	@Override
	public void run() {
		
		while(gameThread != null) {
			
			System.out.println("Game loop is running");
			
			// This Loop will update info such as character position
			update();
			// as well as draw the screen with the updated info
			repaint();
		}
		
	}
	
	
	public void update() {
		
		if(keyH.upPressed == true) {
			playerY -= playerSpeed;
		}
		else if (keyH.downPressed == true) {
			playerY += playerSpeed;
		}
		else if (keyH.leftPressed == true) {
			playerX -= playerSpeed;
		}
		else if (keyH.rightPressed == true) {
			playerX += playerSpeed;
		}
	}
	
	public void paintComponent(Graphics g) {
		
		super.paintComponents(g);
		
		Graphics2D g2 = (Graphics2D)g;
		
		g2.setColor(Color.white);
		
		g2.fillRect(playerX, playerY, tileSize, tileSize);
		
		g2.dispose();
	}
}
